GameLevel.txt - contains names and matrices
Parser needs 


vector of UniqueMesh's
GameLevel reader pushes back for unique names, adding matrices
	parse till we find a mesh and get a name,
	search vector of UniqueMesh's if name exists
	if so, then push back matrix to the matrix vector
	else push back new UniqueMesh
h2bParser pushes vertices, indices, etc. 
	for each UniqueMesh
		filename = "../Assets/Models" + um.name + ".h2b"
		parse
		write vertex data duplicates for um.matrix.size()
batch function converts UniqueMesh to Instance, and pushes back all data into LevelData



uniform buffer for instance matrices
instance has all the matrices still






https://stackoverflow.com/questions/54619507/whats-the-correct-way-to-implement-instanced-rendering-in-vulkan
in your code:

vkCmdDrawIndexed(command_buffer, indices_size, 
	instance_count, 0, 0, instance_first_index);

instance_count: number of instances to draw
instance_first_index: first instance will have this id
in your vertex shader you can then use variable 
gl_InstanceIndex which contains the instance id starting with instance_first_index

https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDrawIndexed.html


for every draw call, multiply by the world[gl_InstanceIndex]

for each lvlData.Instance
	drawIndexed(command_buffer, lvlData.Instance[i].indexCount,
		lvlData.Instance[i].instanceCount, lvlData.Instance[i].firstIndex,
		lvlData.Instance[i].vertexOffset, 0);







